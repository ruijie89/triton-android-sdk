apply plugin: 'com.android.library'
apply from: '../export_aar.gradle'

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion TRITONSDK_MIN_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
          minifyEnabled false
          proguardFiles rootProject.file('proguard.txt')
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
    lintOptions {
        abortOnError false
    }
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.google.android.gms:play-services-base:17.5.0'
    api 'com.google.android.gms:play-services-analytics:17.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
    androidTestImplementation 'junit:junit:4.12'


}

task SdkUtilVersion {
    version = rootProject.ext.tritonSDKVersion
    logger.info("Create SdkUtil.java with version : ${version}")
    def file = new File("${rootDir}/util/src/main/java/com/tritondigital/util/SdkUtil.java")
    file.createNewFile()
    file.text = """//Auto-generated file. Do not edit.
    package com.tritondigital.util;
    public final class SdkUtil { public static final String VERSION = "$version";
    private SdkUtil() {}}"""
}
